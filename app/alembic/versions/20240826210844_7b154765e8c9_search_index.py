"""search index

Revision ID: 20240826210844_7b154765e8c9
Revises: 20240823164559_05069444feee
Create Date: 2024-08-26 21:08:44.245729

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20240826210844_7b154765e8c9'
down_revision: Union[str, None] = '20240823164559_05069444feee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('projects')
    op.drop_table('users')
    op.drop_index('ix_messages_conversation_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_conversations_id', table_name='conversations')
    op.drop_index('ix_conversations_user_id', table_name='conversations')
    op.drop_table('conversations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'ARCHIVED', 'DELETED', name='conversationstatus'), autoincrement=False, nullable=False),
    sa.Column('project_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], name='conversations_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='conversations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_conversations_user_id', 'conversations', ['user_id'], unique=False)
    op.create_index('ix_conversations_id', 'conversations', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('conversation_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', postgresql.ENUM('AI_GENERATED', 'HUMAN', 'SYSTEM_GENERATED', name='messagetype'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'ARCHIVED', 'DELETED', name='message_status_enum'), server_default=sa.text("'ACTIVE'::message_status_enum"), autoincrement=False, nullable=False),
    sa.CheckConstraint("type = 'HUMAN'::messagetype AND sender_id IS NOT NULL OR (type = ANY (ARRAY['AI_GENERATED'::messagetype, 'SYSTEM_GENERATED'::messagetype])) AND sender_id IS NULL", name='check_sender_id_for_type'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name='messages_conversation_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_index('ix_messages_conversation_id', 'messages', ['conversation_id'], unique=False)
    op.create_table('users',
    sa.Column('uid', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('last_login_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('provider_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('provider_username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uid', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('projects',
    sa.Column('id', sa.TEXT(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=False, nullable=False),
    sa.Column('properties', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('repo_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('branch_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('commit_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.CheckConstraint("status::text = ANY (ARRAY['submitted'::character varying, 'cloned'::character varying, 'parsed'::character varying, 'ready'::character varying, 'error'::character varying]::text[])", name='check_status'),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], name='projects_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    # ### end Alembic commands ###
