"""remove agents and relationships

Revision ID: 20240816080308_005fef8773fa
Revises: 20240813145447_56e7763c7d20
Create Date: 2024-08-16 08:03:08.612663

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20240816080308_005fef8773fa'
down_revision: Union[str, None] = '20240813145447_56e7763c7d20'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE messagetype ADD VALUE 'SYSTEM_GENERATED'")
    op.drop_column('conversations', 'agent_ids')
    op.drop_constraint('check_sender_id_for_type', 'messages', type_='check')
    op.execute("COMMIT")
    # Recreate the constraint with the correct logic
    op.create_check_constraint(
        'check_sender_id_for_type',
        'messages',
        "((type = 'HUMAN'::messagetype AND sender_id IS NOT NULL) OR "
        "(type IN ('AI_GENERATED'::messagetype, 'SYSTEM_GENERATED'::messagetype) AND sender_id IS NULL))"
    )
    op.execute("COMMIT")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conversations', sa.Column('agent_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
    # Downgrade by dropping the new constraint and recreating the old one
    op.drop_constraint('check_sender_id_for_type', 'messages', type_='check')
    op.execute("COMMIT")
    # Recreate the original constraint without SYSTEM_GENERATED
    op.create_check_constraint(
        'check_sender_id_for_type',
        'messages',
        "((type = 'HUMAN'::messagetype AND sender_id IS NOT NULL) OR "
        "(type = 'AI_GENERATED'::messagetype AND sender_id IS NULL))"
    )
    op.execute("COMMIT")
