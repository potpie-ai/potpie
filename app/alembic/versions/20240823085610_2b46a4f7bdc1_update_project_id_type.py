"""update project id type

Revision ID: 20240823085610_2b46a4f7bdc1
Revises: 20240821232048_4290b847e480
Create Date: 2024-08-23 08:56:10.666265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# revision identifiers, used by Alembic.
revision: str = '20240823085610_2b46a4f7bdc1'
down_revision: Union[str, None] = '20240821232048_4290b847e480'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None



def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column('projects', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    
    # Update the check constraint for the status column
    op.drop_constraint('check_status', 'projects', type_='check')
    op.create_check_constraint('check_status', 'projects', 
        "status IN ('submitted', 'cloned', 'parsed', 'ready', 'error')")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('projects', 'id',
               existing_type=sa.Text(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # Revert the check constraint for the status column
    op.drop_constraint('check_status', 'projects', type_='check')
    op.create_check_constraint('check_status', 'projects', 
        "status IN ('created', 'ready', 'error')")

    # ### end Alembic commands ###
