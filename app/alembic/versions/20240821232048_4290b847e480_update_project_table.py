"""update project table

Revision ID: 20240821232048_4290b847e480
Revises: 20240816080308_005fef8773fa
Create Date: 2024-08-21 23:20:48.255576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20240821232048_4290b847e480'
down_revision: Union[str, None] = '20240816080308_005fef8773fa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=False)
    op.drop_constraint('projects_directory_key', 'projects', type_='unique')
    op.drop_column('projects', 'project_name')
    op.drop_column('projects', 'is_default')
    op.drop_column('projects', 'directory')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('projects', sa.Column('directory', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('projects', sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('projects', sa.Column('project_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint('projects_directory_key', 'projects', ['directory'])
    op.alter_column('projects', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###
