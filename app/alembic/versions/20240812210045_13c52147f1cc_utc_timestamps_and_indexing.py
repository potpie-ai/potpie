"""UTC Timestamps and Indexing

Revision ID: 20240812210045_13c52147f1cc
Revises: 20240812193554_e6b6e5771180
Create Date: 2024-08-12 21:00:45.051434

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20240812210045_13c52147f1cc'
down_revision: Union[str, None] = '20240812193554_e6b6e5771180'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create ConversationStatus enum type
    conversationstatus = postgresql.ENUM('ACTIVE', 'ARCHIVED', 'DELETED', name='conversationstatus')
    conversationstatus.create(op.get_bind())

    # Create MessageType enum type
    messagetype = postgresql.ENUM('AI_GENERATED', 'HUMAN', name='messagetype')
    messagetype.create(op.get_bind())

    op.add_column('conversations', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('conversations', sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', 'DELETED', name='conversationstatus'), nullable=False))
    op.alter_column('conversations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('conversations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_index(op.f('ix_conversations_user_id'), 'conversations', ['user_id'], unique=False)
    op.add_column('messages', sa.Column('type', sa.Enum('AI_GENERATED', 'HUMAN', name='messagetype'), nullable=False))
    op.alter_column('messages', 'sender_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.alter_column('messages', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('messages', 'sender_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('messages', 'type')
    op.drop_index(op.f('ix_conversations_user_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.alter_column('conversations', 'updated_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('conversations', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('conversations', 'status')
    op.drop_column('conversations', 'title')

    # Drop the enums after columns are dropped
    conversationstatus = postgresql.ENUM('ACTIVE', 'ARCHIVED', 'DELETED', name='conversationstatus')
    conversationstatus.drop(op.get_bind())

    messagetype = postgresql.ENUM('AI_GENERATED', 'HUMAN', name='messagetype')
    messagetype.drop(op.get_bind())
    # ### end Alembic commands ###
